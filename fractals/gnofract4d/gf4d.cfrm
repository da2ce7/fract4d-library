comment {

Standard Gnofract4D coloring algorithms

}

default (OUTSIDE){
; the default is just to use the iteration count
final:
#index = #numiter / 256.0
}

zero (BOTH) {
final:
#solid = true
}

continuous_potential {
final:
float ed = @bailout/(|z| + 1.0e-9) 
#index = (#numiter + ed) / 256.0
default:
float param bailout
	default = 4.0
endparam
}

external_angle {
final:
float angle = atan2(z)
if angle < 0.0 
	angle = 2.0 * #pi + angle
endif
#index = angle / (2.0 * #pi)
}

decomposition {
final:
float quadrant = 0.0;
if(real(z) < 0.0) 
	quadrant = quadrant + 0.25
endif
if(imag(z) < 0.0) 
	quadrant = quadrant + 0.5
endif
#index = quadrant
}

ejection_distance {
final:
float ed = @bailout/(|z| + 1.0e-9) 
#index = ed
default:
float param bailout
	default = 4.0
endparam
}

rgb {
; for backwards compatibility with 1.x versions of Gnofract 4D
final:
	float dist = #numiter / 256.0
	float r = (dist * (1.0 + 10.0 * @base_red)) % 256.0
	float g = (dist * (1.0 + 10.0 * @base_green)) % 256.0
	float b = (dist * (1.0 + 10.0 * @base_blue)) % 256.0
	#color = rgb(r,g,b)
default:
float param bailout
	default = 4.0
endparam
float param base_red
	default = 1.0 
endparam
float param base_green
	default = 0.0 
endparam
float param base_blue
	default = 0.0 
endparam
}
